---
hosts:
  -
    settings:
      hostname: demo #Default or Provide user option
      domain: startcloud.com #Default or Provide user option
      server_id: '4020' #Auto-generate
      vcpus: 2 #Default or Provide user option
      memory: 4G #Default or Provide user option

      consoleport: 4020 #Auto-generate
      consolehost: 0.0.0.0
      box: 'STARTcloud/debian11-server'
      box_version: 0.0.3
      os_type: 'Debian_64'
      provider-type: virtualbox
      firmware_type: UEFI
      setup_wait: 300
      vagrant_user_private_key_path: ./id_rsa
      vagrant_user: startcloud
      vagrant_user_pass: 'STARTcloud22@!'
      vagrant_insert_key: true
      ssh_forward_agent: true

    networks:
      - address: 192.168.2.227 #Use a sane default, This is ignored when dhcp4 is set to true, Provide user option
        netmask: 255.255.255.0 #Use a sane default, This is ignored when dhcp4 is set to true, Provide user option
        gateway: #Blank, This is ignored when dhcp4 is set to true, Provide user option
        dhcp4: true #Default, Provide user option in case they want static ip
        dhcp6: false #Default, False always
        bridge: #Blank or Provide user option
        type: external
        mac: auto
        dns:
          - nameserver: 1.1.1.1
          - nameserver: 1.0.0.1

    ## For later use in Data Portability
    ## https://sleeplessbeastie.eu/2021/05/10/how-to-define-multiple-disks-inside-vagrant-using-virtualbox-provider/
    #disks:
    #  boot:
    #    size: 30G
    #  additional_disks:
    #    - volume_name: disk1
    #      size: 20G

    # Moved to Hosts.rb, Here to document how to override, will be removed in future version once documented in README
    #vbox:
    #  directives:
    #    - directive: vrde
    #      value: 'on'

    provisioning:
      ansible.builtin.shell:
        enabled: false
        scripts:
          - './scripts/aliases.sh'

      ansible:
        enabled: true
        scripts:
          - local:
              - script: ansible/generate-playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false
              - script: ansible/playbook.yml
                ansible_python_interpreter: /usr/bin/python3
                compatibility_mode: 2.0
                install_mode: pip
                ssh_pipelining: true
                verbose: false

    folders:
      - map: .
        to: /vagrant
        type: virtualbox
        disabled: true
        automount: true
        description: "Disable VBoxSF"
      - map: ./ansible/
        to: /vagrant/ansible/
        type: rsync
        args:
          - '--verbose'
          - '--archive'
          - '--delete'
          - '-z'
          - '--copy-links'
      - map: ./installers/
        to: /vagrant/installers/
        type: rsync
        description: "Users will want to put their installer files into these folders"
      - map: ./ssls/
        to: /secure/
        type: rsync
      - map: ./safe-id-to-cross-certify/
        to: /safe-id-to-cross-certify/
        type: rsync

    vars:
      ## You can set global role variables here, look in the defaults folders for hints as to variables used by roles
      domino_organization: STARTcloud #Default or Provide user option
      domino_server_clustermates: 0
      safe_notes_id: SAFE.IDS #Variable or Provide user option
      domino_admin_notes_id_password: "password"

      ## When using the default: demo.startcloud.com as the hostname and domain, we use the default-signed.crt certificates to provide a valid SSL
      ## If the hostname and domain, ie demo.startcloud.com do not match the certificate we provide (ie demo.startcloud.com in default-signed.crt), some services may not start (ie nomadweb)
      ## If a user does not mind using a self signed certificate for their development testing for their own domain  or are unable to replace the default-signed.crt files
      ## they would set the below value to true so that the vm creates a SSL crt with the valid hostname, so that when the service compares the hostname it is to listen on and
      ## the hostname the certificate is signed for it matches.
      selfsigned_enabled: false
      debug_all: true

    roles:
      - name: always_fail
